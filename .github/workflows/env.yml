name: helloo

on: 
  push:
    branches:  tanishchoudhary-yoyo_1
env:
  serv: hello, hellooo
jobs:
  bro:
  
    runs-on: [${{env.serv}}]
    continue-on-error: true
    steps:
      - name:  "hello"
        run : |
          Write-Output "hello"
#          exit 1
#         continue-on-error: true
      - name: "yo"
        id: yo
        run: |
          Write-Output " no"
          Write-Output "::set-output name=fine::Windows-latest, ubuntu-latest"
    outputs:
      vo: ${{ steps.yo.outputs.fine }}
          
  tro:
    runs-on: [ "${{ needs.bro.outputs.vo }}" ]
    needs: bro
    
    steps:
      - name: "ok"
        run: |
          Write-Output "cool"
          Write-Output ${{ needs.bro.outputs.vo }}
          if ("${{ needs.bro.outputs.vo }}")
          {
            Write-Output "yes"
          }
          else
          {
            Write-Output "no"
          }
  yooo:
      needs: [tro , bro]
      runs-on: ubuntu-latest
      steps:
        - run: echo ${{ needs.bro.outputs.vo }}
        
      
#     outputs:
#       matrix: ${{ steps.set-matrix.outputs.matrix }}   
#     steps:
#       - name: 'checkout coode ${{ github.REF }}'
#         uses: actions/checkout@v2.4.0
#       - name: 'creating matrix'
#         id: set-matrix
#         uses: JoshuaTheMiller/conditional-build-matrix@0.0.1
#         with:
#           filter: '[?runOnBranch==`${{ env.BRANCH_NAME }}` || runOnBranch==`always`]'
    
#   build:
#     needs: bro
#     strategy:      
#       matrix: ${{fromJson(needs.bro.outputs.matrix)}}
#     runs-on: ${{ matrix.runs_on }}
#     steps:
#     - name: Echo
#       run: |
#         echo "${{ matrix.runOn }}"
#         echo "${{env.serv}}"
        
        
          
          
          
          
